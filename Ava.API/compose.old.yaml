services:
  postgres:
    image: postgres:17.2-alpine3.21
    container_name: pg_ava_api_dev
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: devpassword
      POSTGRES_DB: ava_db
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - ava_network

  migrator:
    build:
      context: .
      dockerfile: Dockerfile.migrator
    container_name: ava_migrator
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresConnection=Host=postgres;Port=5432;Database=ava_db;Username=postgres;Password=devpassword
    depends_on:
      - postgres
    networks:
      - ava_network
    command: [ "dotnet", "ef", "database", "update" ]  # Runs EF migrations and exits

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ava_api
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresConnection=Host=postgres;Port=5432;Database=ava_db;Username=postgres;Password=devpassword
      - ASPNETCORE_URLS=http://+:5165
    ports:
      - "5165:5165"
    depends_on:
      - postgres
      - migrator  # Ensures migrations run before starting API
    networks:
      - ava_network

volumes:
  pg_data:

networks:
  ava_network:
