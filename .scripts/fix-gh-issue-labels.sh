#!/bin/sh

labels=(
  "docker"
  "backlog"
  "build-issue"
  "ISO-3166"
  "nuget-packages"
  "enhancement"
  "identity"
  "travel-domain"
  "api-contract"
  "blazor-webapp"
  "webapp"
  "shared-library"
  "performance"
  "security"
  "breaking-change"
  "documentation"
  "refactor"
  "sql"
  "services"
  "user-preference"
  "will-not-fix"
  "api-controllers"
  "complete"
  "re-opened"
  "class-modify"
)

descriptions=(
  "Related to Docker configuration or containers"
  "Planned work but not yet scheduled"
  "Issues related to build pipelines or CI"
  "Concerns country codes or region standards"
  "Related to NuGet dependencies or packages"
  "Suggested improvement to existing functionality"
  "Concerns authentication or authorization"
  "Logic specific to travel/business rules"
  "Changes or issues with API schema or definitions"
  "Relates to the Blazor WebAssembly frontend"
  "General web application logic"
  "Cross-project reusable components"
  "Performance optimization or degradation"
  "Security fixes, vulnerabilities, or hardening"
  "Breaking change that needs extra attention"
  "Documentation-related updates"
  "Refactoring or code re-structuring"
  "SQL scripts or database-related logic"
  "Backend or domain-specific services"
  "Custom user settings or preferences"
  "Wonâ€™t be resolved due to design or other decisions"
  "API controller-specific logic"
  "Work is finished and merged"
  "Reopened after being closed"
  "Class or model structure changes"
)

# Loop through and apply descriptions
for i in $(seq 0 $((${#labels[@]} - 1))); do
  label="${labels[$i]}"
  desc="${descriptions[$i]}"
  echo "Updating '$label' -> $desc"
  gh label edit "$label" --description "$desc"
done
